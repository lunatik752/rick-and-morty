{"version":3,"sources":["components/header/Icon.jsx","components/header/Header.jsx","components/charactersList/Character.jsx","state/charactersList-reducer.js","components/charactersList/CharactersList.jsx","state/characterPage-reducer.js","components/characterPage/CharacterPage.jsx","components/Page404/Page404.jsx","components/main/Main.jsx","state/app-reducer.js","components/errorAlert/ErrorAlert.jsx","App.jsx","serviceWorker.js","api/api.js","state/sagas.js","state/store.js","index.js","components/characterPage/CharacterPage.module.scss","components/header/Header.module.scss","components/charactersList/Character.module.scss","components/Page404/Page404.module.scss","App.module.scss","components/charactersList/CharactersList.module.scss","assets/icons/rick_96136.svg","assets/icons/morty_96215.svg","components/main/Main.module.scss"],"names":["Icon","React","memo","icon","name","src","alt","Header","status","className","style","header","container","rick","title","morty","loader","LinearProgress","color","Character","character","wrapper","to","id","characterPhoto","image","characterName","SET_CHARACTERS","initialState","info","characters","setCharactersList","data","type","CharactersList","useState","hasMore","setHasMore","dispatch","useDispatch","charactersList","useSelector","state","nextPage","next","nextPageNumber","index","indexOf","Number","slice","dataLength","length","getCharactersList","map","ch","key","SET_CHARACTER","GET_CHARACTER","SET_FIRST_EPISODE_TITLE","CLEAR_STATE","firstEpisodeTitle","CharacterPage","useParams","characterPage","useEffect","getCharacter","history","useHistory","characterStatus","statusClassName","characterStatusAlive","characterStatusDead","characterDescription","descriptionBlock","gender","description","sectionTitle","descriptionName","location","Button","onClick","goBack","variant","Page404","errorNumber","text","Main","exact","path","render","SET_APP_STATUS","INITIALIZE_APP","SET_ERROR","isInitialized","error","setAppStatus","setAppError","Alert","props","elevation","ErrorSnackbar","app","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","App","circularProgress","CircularProgress","Boolean","window","hostname","match","instance","axios","create","baseURL","charactersAPI","pageNumber","get","episodeUrl","watcherInitializeApp","workerInitializeApp","watcherGetCharacter","workerGetCharacter","watcherGetCharactersList","workerGetCharactersList","takeEvery","call","res","put","message","action","res1","episode","res2","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","concat","results","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.3363a516.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Icon = React.memo(({icon, name}) => {\r\n    return (\r\n        <div>\r\n            <img  src={icon} alt={name}/>\r\n        </div>\r\n    );\r\n})\r\n","import React from 'react';\r\nimport style from './Header.module.scss'\r\nimport rick from './../../assets/icons/rick_96136.svg'\r\nimport morty from './../../assets/icons/morty_96215.svg'\r\nimport {Icon} from \"./Icon\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nexport const Header = React.memo(({status}) => {\r\n    return (\r\n        <div className={style.header}>\r\n            <div className={style.container}>\r\n                <Icon icon={rick} name={'Rick'}/>\r\n                <div className={style.title}>\r\n                    <h1>Rick & Morty</h1>\r\n                </div>\r\n                <Icon icon={morty} name={'Morty'}/>\r\n            </div>\r\n            <div className={style.loader}>\r\n                {status === 'loading' && <LinearProgress color='secondary'/>}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport style from './Character.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const Character = React.memo(({character}) => {\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <NavLink to={`/character/${character.id}`}>\r\n                <div className={style.container}>\r\n                    <div className={style.characterPhoto}>\r\n                        <img src={character.image} alt={character.name}/>\r\n                    </div>\r\n                    <div className={style.characterName}>\r\n                        <h3>{character.name}</h3>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n})\r\n\r\n","const SET_CHARACTERS = 'rick-and-morty/charactersList/SET-CHARACTERS';\r\nexport const GET_CHARACTERS_LIST = 'rick-and-morty/charactersList/SET-CHARACTERS-LIST';\r\n\r\n\r\nconst initialState = {\r\n    info: {},\r\n    characters: []\r\n}\r\n\r\n\r\nexport const charactersListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CHARACTERS:\r\n            return {\r\n                ...state,\r\n                info: action.data.info,\r\n                characters: [...state.characters].concat(action.data.results)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setCharactersList = (data) => ({type: SET_CHARACTERS, data});\r\n\r\nexport const getCharactersList = (nextPageNumber) => ({type: GET_CHARACTERS_LIST, nextPageNumber});\r\n\r\n","import React, {useState} from 'react';\r\nimport style from './CharactersList.module.scss'\r\nimport {Character} from \"./Character\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport {getCharactersList} from \"../../state/charactersList-reducer\";\r\n\r\nexport const CharactersList = React.memo(() => {\r\n\r\n    let [hasMore, setHasMore] = useState(true)\r\n\r\n    const dispatch = useDispatch()\r\n    const charactersList = useSelector(state => state.charactersList.characters)\r\n    const nextPage = useSelector(state => state.charactersList.info.next)\r\n\r\n\r\n    let nextPageNumber = 1\r\n    if (nextPage) {\r\n        const index = nextPage.indexOf(\"?page=\") + 6;\r\n        nextPageNumber = Number(nextPage.slice(index))\r\n    }\r\n\r\n\r\n    const fetchMoreData = () => {\r\n        if (!nextPage) {\r\n            setHasMore(false);\r\n            return;\r\n        }\r\n        dispatch(getCharactersList(nextPageNumber))\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <InfiniteScroll\r\n                className={style.container}\r\n                dataLength={charactersList.length}\r\n                next={fetchMoreData}\r\n                hasMore={hasMore}\r\n                loader={''}>\r\n                {\r\n                    charactersList.map(ch => <Character key={ch.id}  character={ch}/>)\r\n                }\r\n            </InfiniteScroll>\r\n        </div>\r\n    );\r\n})\r\n","export const SET_CHARACTER = 'rick-and-morty/characterPage/SET-CHARACTERS';\r\nexport const GET_CHARACTER = 'rick-and-morty/characterPage/GET-CHARACTER';\r\nexport const SET_FIRST_EPISODE_TITLE = 'rick-and-morty/characterPage/SET-FIRST-EPISODE-TITLE';\r\nexport const CLEAR_STATE = 'rick-and-morty/characterPage/CLEAR-STATE';\r\n\r\n\r\nconst initialState = {\r\n    character: {},\r\n    firstEpisodeTitle: ''\r\n}\r\n\r\n\r\nexport const characterPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CHARACTER:\r\n            return {\r\n                ...state,\r\n                character: action.character\r\n            }\r\n        case SET_FIRST_EPISODE_TITLE:\r\n            return {\r\n                ...state,\r\n                firstEpisodeTitle: action.episode.name\r\n            }\r\n        case CLEAR_STATE:\r\n            return {\r\n                ...state,\r\n                character: {},\r\n                firstEpisodeTitle: ''\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setCharacter = (character) => ({type: SET_CHARACTER, character})\r\n\r\nexport const getCharacter = (id) => ({type: GET_CHARACTER, id})\r\n\r\nexport const setFirstEpisodeTitle = (episode) => ({type: SET_FIRST_EPISODE_TITLE, episode})\r\n\r\nexport const clearState = () => ({type: CLEAR_STATE})\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport style from './CharacterPage.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearState, getCharacter} from \"../../state/characterPage-reducer\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nexport const CharacterPage = React.memo(() => {\r\n\r\n        const {id} = useParams()\r\n        const character = useSelector(state => state.characterPage.character)\r\n        const firstEpisodeTitle = useSelector(state => state.characterPage.firstEpisodeTitle)\r\n\r\n        const dispatch = useDispatch()\r\n\r\n\r\n        useEffect(() => {\r\n            dispatch(getCharacter(id))\r\n            return () => {\r\n                dispatch(clearState())\r\n            }\r\n        }, [dispatch, id])\r\n\r\n\r\n        let history = useHistory();\r\n\r\n        const goBack = () => {\r\n            history.goBack();\r\n        }\r\n\r\n        const characterStatus = character.status;\r\n        let statusClassName = '';\r\n        switch (characterStatus) {\r\n            case 'Alive':\r\n                statusClassName = style.characterStatusAlive;\r\n                break;\r\n            case 'Dead':\r\n                statusClassName = style.characterStatusDead;\r\n                break;\r\n            default:\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={style.container}>\r\n                <div className={style.characterPhoto}>\r\n                    <img src={character.image}\r\n                         alt={character.name}/>\r\n                </div>\r\n\r\n                <div className={style.characterDescription}>\r\n                    <div className={style.descriptionBlock}>\r\n                        <div className={style.characterName}>\r\n                            <h3>{character.name}</h3>\r\n                        </div>\r\n                        <div className={style.characterStatus}>\r\n                            <span><span className={statusClassName}>{characterStatus}</span> - {character.gender} </span>\r\n                        </div>\r\n                        <div className={style.description}>\r\n                            <span className={style.sectionTitle}> Last known location:</span>\r\n                            <span className={style.descriptionName}>\r\n                        {character.location?.name}\r\n                    </span>\r\n                        </div>\r\n                        <div className={style.description}>\r\n                            <span className={style.sectionTitle}> First seen in:</span>\r\n                            <span className={style.descriptionName}>{firstEpisodeTitle}</span>\r\n                        </div>\r\n                    </div>\r\n                    <Button onClick={goBack} variant=\"contained\">\r\n                        Back\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n","import style from \"./Page404.module.scss\";\r\n\r\nimport React from \"react\";\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div className={style.container}>\r\n            <span className={style.errorNumber}>404</span>\r\n            <span className={style.text}>Page not found</span>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport style from './Main.module.scss'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {CharactersList} from \"../charactersList/CharactersList\";\r\nimport {CharacterPage} from \"../characterPage/CharacterPage\";\r\nimport {Page404} from \"../Page404/Page404\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div className={style.container}>\r\n            <Switch>\r\n                <Route exact path={'/'}  render={() => <Redirect to={'/charactersList'}/>}/>\r\n                <Route path={'/charactersList'} render={() => <CharactersList/>}/>\r\n                <Route path='/character/:id' render={() => <CharacterPage/>}/>\r\n                <Route path={'*'} render={() => <Page404/>}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n","export const SET_APP_STATUS = 'rick-and-morty/app/SET-APP-STATUS';\r\nexport const INITIALIZE_APP = 'rick-and-morty/app/INITIALIZE-APP';\r\nexport const SET_ERROR = 'rick-and-morty/app/SET-ERROR';\r\n\r\n\r\nconst initialState = {\r\n    status: 'idle',\r\n    isInitialized: false,\r\n    error: null\r\n\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_APP_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case INITIALIZE_APP:\r\n            return {\r\n                ...state,\r\n                isInitialized: true\r\n            }\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// actions\r\nexport const setAppStatus = (status) => ({type: SET_APP_STATUS, status})\r\n\r\nexport const initializeApp = () => ( {type: INITIALIZE_APP})\r\n\r\nexport const setAppError = (error) => ({type: SET_ERROR, error})\r\n\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert  from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setAppError} from \"../../state/app-reducer\";\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n\r\n    const error = useSelector( state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n\r\n        }\r\n        dispatch(setAppError(null))\r\n    }\r\n\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React, {useEffect} from 'react';\nimport style from './App.module.scss';\nimport {Header} from \"./components/header/Header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Main} from \"./components/main/Main\";\nimport {initializeApp} from \"./state/app-reducer\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {ErrorSnackbar} from \"./components/errorAlert/ErrorAlert\";\n\n\nconst App = () => {\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(initializeApp())\n    }, [dispatch])\n\n    const status = useSelector(state => state.app.status)\n    const isInitialized = useSelector(state => state.app.isInitialized)\n\n\n    if (!isInitialized) {\n        return <div className={style.circularProgress}>\n            <CircularProgress/>\n        </div>\n    }\n\n    return (\n\n        <div className={style.app}>\n            <ErrorSnackbar/>\n            <Header status={status}/>\n            <Main/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://rickandmortyapi.com/api/character/',\r\n});\r\n\r\n\r\nexport const charactersAPI = {\r\n    getCharactersList(pageNumber) {\r\n        return instance.get(`?page=${pageNumber}`)\r\n    },\r\n    getCharacter(id) {\r\n        return  instance.get(`${id}`)\r\n    },\r\n    getFirstEpisodeTitle(episodeUrl) {\r\n        return axios.get(episodeUrl)\r\n    }\r\n}\r\n\r\n","import {call, put, takeEvery} from 'redux-saga/effects'\r\nimport {INITIALIZE_APP, setAppError, setAppStatus} from \"./app-reducer\";\r\nimport {charactersAPI} from \"../api/api\";\r\nimport {GET_CHARACTERS_LIST, setCharactersList} from \"./charactersList-reducer\";\r\nimport {GET_CHARACTER, setCharacter, setFirstEpisodeTitle} from \"./characterPage-reducer\";\r\n\r\nexport function* watcherInitializeApp() {\r\n    yield takeEvery(INITIALIZE_APP, workerInitializeApp)\r\n}\r\n\r\nfunction* workerInitializeApp() {\r\n    try {\r\n        const res = yield call(charactersAPI.getCharactersList)\r\n        yield put(setCharactersList(res.data))\r\n    } catch (error) {\r\n        yield put(setAppError(error.message ? {error: error.message} : {error: 'Some error occurred'}))\r\n        yield put(setAppStatus('failed'))\r\n    }\r\n}\r\n\r\nexport function* watcherGetCharacter() {\r\n    yield takeEvery(GET_CHARACTER, workerGetCharacter)\r\n}\r\n\r\nfunction* workerGetCharacter(action) {\r\n    yield put(setAppStatus('loading'))\r\n    try {\r\n        const res1 = yield call(charactersAPI.getCharacter, action.id)\r\n        yield put(setCharacter(res1.data))\r\n        const res2 = yield call(charactersAPI.getFirstEpisodeTitle, res1.data.episode[0])\r\n        yield put(setFirstEpisodeTitle(res2.data))\r\n        yield put(setAppStatus('success'))\r\n    } catch (error) {\r\n        yield put(setAppError(error.message ? {error: error.message} : {error: 'Some error occurred'}))\r\n        yield put(setAppStatus('failed'))\r\n    }\r\n}\r\n\r\nexport function* watcherGetCharactersList() {\r\n    yield takeEvery(GET_CHARACTERS_LIST, workerGetCharactersList)\r\n}\r\n\r\nfunction* workerGetCharactersList(action) {\r\n    yield put(setAppStatus('loading'))\r\n    try {\r\n        const res = yield call(charactersAPI.getCharactersList, action.nextPageNumber)\r\n        yield put(setCharactersList(res.data))\r\n        yield put(setAppStatus('success'))\r\n    } catch (error) {\r\n        yield put(setAppError(error.message ? {error: error.message} : {error: 'Some error occurred'}))\r\n        yield put(setAppStatus('failed'))\r\n    }\r\n}\r\n\r\n// export function* watcherGetFirstEpisodeTitle() {\r\n//     yield takeEvery(GET_FIRST_EPISODE_TITLE, workerGetFirstEpisodeTitle)\r\n// }\r\n//\r\n// function* workerGetFirstEpisodeTitle(action) {\r\n//     yield put(setAppStatus('loading'))\r\n//     try {\r\n//         const res = yield call(charactersAPI.getFirstEpisodeTitle, action.url)\r\n//         yield put(setFirstEpisodeTitle(res.data))\r\n//         yield put(setAppStatus('success'))\r\n//     } catch (error) {\r\n//         yield put(setAppError(error.message ? {error: error.message} : {error: 'Some error occurred'}))\r\n//         yield put(setAppStatus('failed'))\r\n//     }\r\n// }\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {watcherGetCharacter, watcherGetCharactersList, watcherInitializeApp} from \"./sagas\";\r\nimport {charactersListReducer} from \"./charactersList-reducer\";\r\nimport {characterPageReducer} from \"./characterPage-reducer\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    charactersList: charactersListReducer,\r\n    characterPage: characterPageReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, compose(applyMiddleware(sagaMiddleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\n\r\nsagaMiddleware.run(watcherInitializeApp)\r\nsagaMiddleware.run(watcherGetCharacter)\r\nsagaMiddleware.run(watcherGetCharactersList)\r\n\r\n\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from './state/store';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL} >\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CharacterPage_container__BkTgT\",\"characterPhoto\":\"CharacterPage_characterPhoto__3euwL\",\"characterDescription\":\"CharacterPage_characterDescription__2ArcM\",\"descriptionBlock\":\"CharacterPage_descriptionBlock__2Sn5o\",\"characterName\":\"CharacterPage_characterName__2bTkJ\",\"characterStatus\":\"CharacterPage_characterStatus__3Pnk_\",\"characterStatusDead\":\"CharacterPage_characterStatusDead__1gDyA\",\"characterStatusAlive\":\"CharacterPage_characterStatusAlive__2tSmf\",\"description\":\"CharacterPage_description__NYWYX\",\"sectionTitle\":\"CharacterPage_sectionTitle__1nTLG\",\"descriptionName\":\"CharacterPage_descriptionName__1CdN0\",\"backButton\":\"CharacterPage_backButton__1oYLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Ds3u\",\"container\":\"Header_container__HqwOg\",\"title\":\"Header_title__2aOO2\",\"loader\":\"Header_loader__3nR23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Character_wrapper__2zd9d\",\"container\":\"Character_container__KNExY\",\"characterPhoto\":\"Character_characterPhoto__2jo_I\",\"characterName\":\"Character_characterName__3ST3N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page404_container__KL3MC\",\"errorNumber\":\"Page404_errorNumber__P1XJD\",\"text\":\"Page404_text__1W5wG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3c8TU\",\"circularProgress\":\"App_circularProgress__3g5MK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CharactersList_wrapper__1WybH\",\"container\":\"CharactersList_container__25T5R\"};","module.exports = __webpack_public_path__ + \"static/media/rick_96136.e7fefe76.svg\";","module.exports = __webpack_public_path__ + \"static/media/morty_96215.646d32ec.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__1fCbX\"};"],"sourceRoot":""}